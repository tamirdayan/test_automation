{"name": "getRoute: 200 OK Routing Result", "status": "broken", "statusDetails": {"message": "TypeError: Test_Graphhopper.setup_graphhopper_local_server() missing 1 required positional argument: 'self'", "trace": "self = <automation_final_project.graphhopper.test_graphopper.Test_Graphhopper object at 0x106b7aad0>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def setup(self):\n>       Test_Graphhopper.setup_graphhopper_local_server()\nE       TypeError: Test_Graphhopper.setup_graphhopper_local_server() missing 1 required positional argument: 'self'\n\nautomation_final_project/graphhopper/test_graphopper.py:73: TypeError"}, "description": "This test gets the route between two points. Verifies a path exists between the two points.", "start": 1682613217247, "stop": 1682613217247, "uuid": "b82457b2-934a-41dc-b933-7594373ce2c6", "historyId": "d68e3637fb9f62389a2df978367c6864", "testCaseId": "ceedba68ab39b2cc71bccfbdf1e151c8", "fullName": "automation_final_project.graphhopper.test_graphopper.Test_Graphhopper#test_get_route_exists", "labels": [{"name": "parentSuite", "value": "automation_final_project.graphhopper"}, {"name": "suite", "value": "test_graphopper"}, {"name": "subSuite", "value": "Test_Graphhopper"}, {"name": "host", "value": "tamir-dayan-MBP"}, {"name": "thread", "value": "32133-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "automation_final_project.graphhopper.test_graphopper"}]}