{"name": "getRoute: 400 Request Not Valid", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'hints': [{'...d, but was:1'} == {'message': '...ast 2 points'}\n  Differing items:\n  {'message': 'At least 2 points have to be specified, but was:1'} != {'message': 'Specify at least 2 points'}\n  Left contains 1 more item:\n  {'hints': [{'details': 'java.lang.IllegalArgumentException',\n              'message': 'At least 2 points have to be specified, but was:1'}]}\n  Full diff:\n    {...\n  \n  ...Full output truncated (6 lines hidden), use '-vv' to show", "trace": "self = <automation_final_project.graphhopper.test_graphopper.Test_Graphhopper object at 0x103b9e710>\n\n    @allure.title(\"getRoute: 400 Request Not Valid\")\n    @allure.description(\n        \"This test gets a request with a single point, and expects status 400: Your request is not valid.\")\n    def test_get_route_single_point(self):\n        params = {\n            'point': [f'{Test_Graphhopper.locations[0][0]},{Test_Graphhopper.locations[0][1]}'],\n            'profile': 'car',\n            'key': API_KEY\n        }\n        response = requests.get(API_URL, params=params)\n        assert response.status_code == 400\n        assert response.reason == 'Bad Request'\n>       assert response.json() == STATUS_400_ONE_POINT_ERROR_MESSAGE\nE       AssertionError: assert {'hints': [{'...d, but was:1'} == {'message': '...ast 2 points'}\nE         Differing items:\nE         {'message': 'At least 2 points have to be specified, but was:1'} != {'message': 'Specify at least 2 points'}\nE         Left contains 1 more item:\nE         {'hints': [{'details': 'java.lang.IllegalArgumentException',\nE                     'message': 'At least 2 points have to be specified, but was:1'}]}\nE         Full diff:\nE           {...\nE         \nE         ...Full output truncated (6 lines hidden), use '-vv' to show\n\nautomation_final_project/graphhopper/test_graphopper.py:112: AssertionError"}, "description": "This test gets a request with a single point, and expects status 400: Your request is not valid.", "start": 1682605551884, "stop": 1682605551887, "uuid": "6386e667-658d-46e8-b72f-3756cd53467f", "historyId": "91e4b1178f0c73020eb89bf378ada56e", "testCaseId": "6153c55dbf337448792d46b6667e2221", "fullName": "automation_final_project.graphhopper.test_graphopper.Test_Graphhopper#test_get_route_single_point", "labels": [{"name": "parentSuite", "value": "automation_final_project.graphhopper"}, {"name": "suite", "value": "test_graphopper"}, {"name": "subSuite", "value": "Test_Graphhopper"}, {"name": "host", "value": "tamir-dayan-MBP"}, {"name": "thread", "value": "19410-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "automation_final_project.graphhopper.test_graphopper"}]}